{"version":3,"sources":["scripts/main.js"],"names":["field","button","document","querySelector","start","messageLose","messageWin","messageStart","rowsArr","querySelectorAll","cellsArr","gameScore","pointsToWin","width","result","gameBeginning","launchingRandom","empty","row","cell","withoutZero","quadrates","filter","item","squareValue","place","num","classList","innerText","remove","noEmptySpaces","x","Math","floor","random","y","children","connection","arr","i","length","innerHTML","push","invert","items","map","value","checkConnection","invertField","moveRight","el","elAfterInvert","reverse","number","moveLeft","moveUp","moveDown","addEventListener","contains","add","forEach","e","key"],"mappings":"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","file":"main.cb25f241.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet field = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nconst button = document.querySelector('button');\nconst start = document.querySelector('.start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst rowsArr = document.querySelectorAll('.field-row');\nconst cellsArr = document.querySelectorAll('.field-cell');\nconst gameScore = document.querySelector('.game-score');\nconst pointsToWin = 2048;\nconst width = 4;\nlet result = 0;\n\nfunction gameBeginning() {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  launchingRandom();\n  launchingRandom();\n}\n\nfunction empty() {\n  for (let row = 0; row < width; row++) {\n    for (let cell = 0; cell < width; cell++) {\n      if (field[row][cell] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nfunction withoutZero(quadrates) {\n  return quadrates.filter(item => item > 0);\n}\n\nconst squareValue = (place, num) => {\n  place.classList = `field-cell--${num} field-cell`;\n\n  if (num === 0) {\n    place.innerText = '';\n  }\n\n  if (num > 0) {\n    place.innerText = num;\n  }\n\n  if (num === pointsToWin) {\n    messageWin.classList.remove('hidden');\n  }\n};\n\nfunction launchingRandom() {\n  if (empty() === false) {\n    return;\n  }\n\n  let noEmptySpaces = false;\n\n  while (noEmptySpaces === false) {\n    const x = Math.floor(Math.random() * width);\n    const y = Math.floor(Math.random() * width);\n\n    if (field[x][y] === 0) {\n      const place = rowsArr[x].children[y];\n\n      if (Math.random() > 0.9) {\n        field[x][y] = 4;\n        squareValue(place, 4);\n      } else {\n        field[x][y] = 2;\n        squareValue(place, 2);\n      }\n\n      noEmptySpaces = true;\n    }\n  }\n}\n\nfunction connection(row) {\n  let arr = withoutZero(row);\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1]) {\n      arr[i] += arr[i + 1];\n      arr[i + 1] = 0;\n      result += arr[i];\n    }\n  }\n\n  gameScore.innerHTML = result;\n  arr = withoutZero(arr);\n\n  while (arr.length < width) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n\nfunction invert(items) {\n  return items.map((value, cell) => items.map(row => row[cell]));\n}\n\nfunction checkConnection() {\n  const invertField = invert([...field]);\n\n  for (let row = 0; row < width; row++) {\n    for (let cell = 0; cell < width - 1; cell++) {\n      if (field[row][cell] === field[row][cell + 1]\n      || invertField[row][cell] === invertField[row][cell + 1]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveRight() {\n  for (let row = 0; row < width; row++) {\n    const el = field[row].reverse();\n\n    const elAfterInvert = connection(el).reverse();\n\n    for (let cell = 0; cell < width; cell++) {\n      field[row] = elAfterInvert;\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nfunction moveLeft() {\n  for (let row = 0; row < width; row++) {\n    const el = field[row];\n\n    const elAfterInvert = connection(el);\n\n    for (let cell = 0; cell < width; cell++) {\n      field[row] = elAfterInvert;\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nfunction moveUp() {\n  for (let cell = 0; cell < width; cell++) {\n    const el = field.map(item => item[cell]);\n    const elAfterInvert = connection(el);\n\n    for (let row = 0; row < width; row++) {\n      field[row][cell] = elAfterInvert[row];\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let cell = 0; cell < width; cell++) {\n    const el = field.map(item => item[cell]).reverse();\n    const elAfterInvert = connection(el).reverse();\n\n    for (let row = 0; row < width; row++) {\n      field[row][cell] = elAfterInvert[row];\n\n      const place = rowsArr[row].children[cell];\n      const number = field[row][cell];\n\n      squareValue(place, number);\n    }\n  }\n}\n\nstart.addEventListener('click', () => {\n  if (start.classList.contains('start')) {\n    start.classList.remove('start');\n    start.classList.add('restart');\n    start.innerHTML = 'Restart';\n    messageStart.classList.add('hidden');\n    gameBeginning();\n  }\n\n  if (start.classList.contains('restart')) {\n    cellsArr.forEach(i => squareValue(i, 0));\n    messageLose.classList.add('hidden');\n    result = 0;\n    gameScore.innerHTML = result;\n    gameBeginning();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (button.innerText === 'Start') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowRight':\n      moveRight();\n      launchingRandom();\n      break;\n    case 'ArrowLeft':\n      moveLeft();\n      launchingRandom();\n      break;\n    case 'ArrowUp':\n      moveUp();\n      launchingRandom();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      launchingRandom();\n      break;\n    default:\n      break;\n  }\n\n  if (!checkConnection() && !empty()) {\n    messageLose.classList.remove('hidden');\n  }\n});\n"]}